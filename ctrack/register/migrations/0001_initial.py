# Generated by Django 3.1.2 on 2020-10-14 16:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organisations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CAFSingleDateEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('short_description', models.CharField(help_text='Short description of the event. Use Comments field for full detail.', max_length=50)),
                ('document_link', models.URLField(blank=True, help_text='URL only - do not try to drag a file here.', max_length=1000, null=True)),
                ('comments', models.TextField(blank=True, help_text='Use this to provide further detail about the event.', max_length=1000, null=True)),
                ('date', models.DateField()),
                ('type_descriptor', models.CharField(choices=[('CAF_INITIAL_CAF_RECEIVED', 'CAF - Initial CAF Received'), ('CAF_FEEDBACK_EMAILED_OES', 'CAF - Emailed to OES'), ('CAF_RECEIVED', 'CAF - Received'), ('CAF_EMAILED_ROSA', 'CAF - Emailed to Rosa'), ('CAF_VALIDATION_SIGN_OFF', 'CAF - Validation Sign Off'), ('CAF_VALIDATION_RECORD_EMAILED_TO_OES', 'CAF - Validation Record Sent to OES')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CAFTwinDateEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('short_description', models.CharField(help_text='Short description of the event. Use Comments field for full detail.', max_length=50)),
                ('document_link', models.URLField(blank=True, help_text='URL only - do not try to drag a file here.', max_length=1000, null=True)),
                ('comments', models.TextField(blank=True, help_text='Use this to provide further detail about the event.', max_length=1000, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('type_descriptor', models.CharField(choices=[('CAF_PEER_REVIEW_PERIOD', 'CAF - Peer Review Period'), ('CAF_VALIDATION_PERIOD', 'CAF - Validation Period')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EngagementEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_description', models.CharField(help_text='Short description of the event. Use Comments field for full detail.', max_length=50)),
                ('date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, help_text='Should be used for periodic events.', null=True)),
                ('document_link', models.URLField(blank=True, help_text='URL only - do not try to drag a file here.', max_length=1000, null=True)),
                ('response_date_requested', models.DateField(blank=True, null=True)),
                ('response_received', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, help_text='Use this to provide further detail about the event.', max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EngagementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptor', models.CharField(max_length=100)),
                ('enforcement_instrument', models.BooleanField(default=False)),
                ('regulation_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.TextField(blank=True, max_length=1000, null=True)),
                ('single_date_type', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SingleDateTimeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField()),
                ('modified_date', models.DateTimeField()),
                ('short_description', models.CharField(help_text='Short description of the event. Use Comments field for full detail.', max_length=50)),
                ('document_link', models.URLField(blank=True, help_text='URL only - do not try to drag a file here.', max_length=1000, null=True)),
                ('comments', models.TextField(blank=True, help_text='Use this to provide further detail about the event.', max_length=1000, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('datetime', models.DateTimeField(help_text='DD/MM/YY HH:MM format please!', verbose_name='Date/Time')),
                ('requested_response_date', models.DateField(blank=True, help_text='DD/MM/YY format', null=True)),
                ('response_received_date', models.DateField(blank=True, help_text='DD/MM/YY format', null=True)),
                ('type_descriptor', models.CharField(choices=[('MEETING', 'Meeting'), ('PHONE_CALL', 'Phone Call'), ('VIDEO_CALL', 'Video Call'), ('EMAIL', 'Email')], max_length=50)),
                ('participants', models.ManyToManyField(blank=True, null=True, to='organisations.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
